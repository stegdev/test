<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>

</body>
</html>
<?php
$files = scandir("./A/"); //Получает список файлов и каталогов, расположенных по указанному пути
array_shift($files); // извлекает первое значение массива files
array_shift($files);
for ($i = 0; $i<count($files); $i = $i+2)
{
    calc_balance(explode(".", $files[$i])[0]); //Разбивает строку с помощью разделителя
}
function calc_balance($file_name)
{
    $INPUT = file("./A/$file_name.dat"); //Читает содержимое файла и помещает его в массив
    $bets_count = trim($INPUT[0], "\n"); //Удаляет символы из начала и конца строки
    $results = array('L' => 0, 'R' => 1, 'D' => 2); //результаты
    if ($bets_count < 0 or $bets_count > 10e4 or !is_numeric($bets_count)) {
        exit("Incorrect data entered"); //Выводит сообщение и прекращает выполнение текущего скрипта
    }
    $bets = array(); //количество ставок
    for ($i = 0; $i < $bets_count; $i++) {
        $bets[$i] = explode(" ", trim($INPUT[$i + 1], "\n"));
        if (count($bets[$i]) != 3 or !is_numeric($bets[$i][0]) or $bets[$i][0] < 0
            or $bets[$i][0] > 10e5 or !is_numeric($bets[$i][1]) or $bets[$i][1] < 0
            or $bets[$i][1] > 1000 or !array_key_exists($bets[$i][2], $results)) {
            exit("Incorrect data entered");
        }
    }
    sort($bets);
    $games_count = trim($INPUT[$bets_count + 1], "\n");
    if ($games_count < 0 or $games_count > 10e5 or !is_numeric($games_count)) {
        exit("Incorrect data entered");
    }
    $games = array(); //игры
    for ($i = 0; $i < $games_count; $i++) {
        $param = explode(" ", trim($INPUT[$i + 2 + $bets_count], "\n"));
        array_shift($param);
        $games[$i] = $param;
        if (count($games[$i]) != 4 or !array_key_exists($games[$i][3], $results)
            or !is_numeric($games[$i][0]) or $games[$i][0] < 1 or $games[$i][0] > 100
            or !is_numeric($games[$i][1]) or $games[$i][1] < 1 or $games[$i][1] > 100
            or !is_numeric($games[$i][2]) or $games[$i][2] < 1 or $games[$i][2] > 100) {
            exit("Incorrect data entered");
        }
    }
    $balance = 0;
    for ($i = 0; $i < $bets_count; $i++) //проверка результатов
    {
        if (!array_key_exists($bets[$i][0] - 1, $games)) {
            $for_people = $i + 1;
            echo "Не удалось найти игру, указанную в ставке $for_people\n";
        } else {
            $current_game = $bets[$i][0] - 1; //номер игры в ставке
            if ($bets[$i][2] == $games[$current_game][3]) {
                $games[$i][3] = trim($games[$current_game][3], "\n");
                $balance += $bets[$i][1] * $games[$current_game][$results[$games[$current_game][3]]] - $bets[$i][1];
            } else {
                $balance -= $bets[$i][1];
            }
        }
    }
    $OUTPUT = file("./A/$file_name.ans");
    $compare = trim($OUTPUT[0], "\n");
    if (!is_numeric($compare)) {
        exit("Incorrect data entered");
    } elseif ($compare == $balance)
        echo "$file_name - TRUE\n";
    else {
        echo "$file_name - FALSE\n";
    }
}
?>
